Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/Marion/my-app/my-app/ClubVoile-1/App.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Greeting: {
    displayName: 'Greeting'
  },
  App: {
    displayName: 'App'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/Marion/my-app/my-app/ClubVoile-1/App.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var Greeting = _wrapComponent('Greeting')(function (_Component) {
  _inherits(Greeting, _Component);

  function Greeting() {
    _classCallCheck(this, Greeting);

    return _possibleConstructorReturn(this, (Greeting.__proto__ || Object.getPrototypeOf(Greeting)).apply(this, arguments));
  }

  _createClass(Greeting, [{
    key: 'render',
    value: function render() {
      return _react3.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 7
          }
        },
        'Hello ',
        this.props.name,
        '!'
      );
    }
  }]);

  return Greeting;
}(_react2.Component));

var App = _wrapComponent('App')(function (_React$Component) {
  _inherits(App, _React$Component);

  function App() {
    _classCallCheck(this, App);

    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
  }

  _createClass(App, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react3.default.createElement(
        _reactNative.View,
        { style: { flex: 1 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 17
          }
        },
        _react3.default.createElement(
          _reactNative.ImageBackground,
          {
            source: require('./LoginBackground.png'),
            style: {
              flex: 1
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 18
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            { style: {
                flex: 1,
                flexDirection: 'column',
                marginLeft: 15,
                marginTop: 30,
                marginBottom: 20,
                marginRight: 15 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 24
              }
            },
            _react3.default.createElement(_reactNative.Image, {
              source: require('./Logo-CV-White.png'),
              style: {
                justifyContent: 'space-around',
                alignSelf: 'center',
                resizeMode: 'contain',
                marginTop: 20,
                height: 200,
                width: 200
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 31
              }
            }),
            _react3.default.createElement(
              _reactNative.View,
              { style: { flex: 0.2,
                  flexDirection: 'column',
                  justifyContent: 'space-between',
                  marginTop: 20 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 43
                }
              },
              _react3.default.createElement(
                _reactNative.View,
                { style: styles.container_input, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 47
                  }
                },
                _react3.default.createElement(_reactNative.TextInput, { style: styles.input,
                  autoCapitalize: 'none',
                  onSubmitEditing: function onSubmitEditing() {
                    return _this3.passwordInput.focus();
                  },
                  autoCorrect: false,
                  keyboardType: 'email-address',
                  returnKeyType: 'next',
                  placeholder: 'Login (pr\xE9nom.nom)',
                  placeholderTextColor: 'rgba(75,60,75,0.8)', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 48
                  }
                })
              ),
              _react3.default.createElement(
                _reactNative.View,
                { style: styles.container_input, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 58
                  }
                },
                _react3.default.createElement(_reactNative.TextInput, { style: styles.input,
                  returnKeyType: 'go',
                  ref: function ref(input) {
                    return _this3.passwordInput = input;
                  },
                  placeholder: 'Mot de passe',
                  placeholderTextColor: 'rgba(75,60,75,0.8)',
                  secureTextEntry: true, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 59
                  }
                })
              ),
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { style: styles.buttonContainer, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 66
                  }
                },
                _react3.default.createElement(
                  _reactNative.Text,
                  { style: styles.buttonText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 67
                    }
                  },
                  'CONNEXION'
                )
              )
            )
          )
        )
      );
    }
  }]);

  return App;
}(_react3.default.Component));

exports.default = App;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center'
  },
  input: {
    color: '#fff',
    fontWeight: '200'
  },
  container_input: {
    borderRadius: 25,
    backgroundColor: 'rgba(255,255,255,0.6)',
    height: 40,
    marginBottom: 0,
    marginTop: 5,
    padding: 10
  },
  buttonContainer: {
    backgroundColor: 'rgba(255,255,255,0.8)',
    paddingVertical: 15,
    marginTop: 15,
    padding: 10,
    borderRadius: 25
  },
  buttonText: {
    color: 'rgba(75,60,75,0.9)',
    textAlign: 'center',
    fontSize: 20,
    fontWeight: '200'
  }
});